//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player Controls/Controls for Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlsforPlayer : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlsforPlayer()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls for Player"",
    ""maps"": [
        {
            ""name"": ""Inv"",
            ""id"": ""fd34008b-80e7-426d-97d4-7c82c44f2dfd"",
            ""actions"": [
                {
                    ""name"": ""Store"",
                    ""type"": ""Value"",
                    ""id"": ""fd1e9d33-dc43-4419-b81d-74f46283fac0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Drop"",
                    ""type"": ""Button"",
                    ""id"": ""5ed0ff00-4926-4efc-a969-e399a0c91f33"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInv"",
                    ""type"": ""Button"",
                    ""id"": ""a9ceb8b1-28ce-4566-8655-620797abb12d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PressPick"",
                    ""type"": ""Button"",
                    ""id"": ""137fa85d-f5ab-4b53-b7f3-1da9092e75c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HoldItem"",
                    ""type"": ""Button"",
                    ""id"": ""e3efaabd-f84c-4644-914b-028932e17948"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""25af452b-f432-46da-8bd2-79f6244aeeed"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1442667d-a526-4eb4-9b71-7e1666b28729"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6d45c2d-d454-4498-bf21-9142a5e2efa1"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HoldItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63821ca2-e76a-4d73-bbeb-8b2c381fb53a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInv"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc4da418-3b38-4c79-a1a8-3a7f05eb0048"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInv"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad86e4db-23c8-4aac-9036-2eff151e3b10"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PressPick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2643c2af-f640-46b5-b5a6-51cfe754008e"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PressPick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Actions"",
            ""id"": ""e0f5a95b-511f-4b07-a28e-fa89eb759e3c"",
            ""actions"": [
                {
                    ""name"": ""Glide"",
                    ""type"": ""Button"",
                    ""id"": ""81c37c7b-46ca-44df-89ad-1757458b57c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dive"",
                    ""type"": ""Button"",
                    ""id"": ""63fb4c82-2fc1-4970-b6bb-fca2cb8c73b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GlideLeft"",
                    ""type"": ""Button"",
                    ""id"": ""e8203e8b-3fc1-4b66-9508-615a9eb92162"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GlideRight"",
                    ""type"": ""Button"",
                    ""id"": ""2fca163b-c2dd-47df-ba3f-2bfd8aa1c8de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""76884bb7-09ba-4323-a932-4b7fb3bddc23"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(pressPoint=0.1,behavior=2)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchHat"",
                    ""type"": ""Button"",
                    ""id"": ""72f8dc6b-8a82-445e-92db-761c708e2da6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CowBoyHatShot"",
                    ""type"": ""Button"",
                    ""id"": ""b24af90e-fe17-4666-84d8-fd56076a4f40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""MultiTap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CowBoyHatUse"",
                    ""type"": ""Button"",
                    ""id"": ""0dcc801f-3a77-40f3-a996-bdb6c41786e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActivateHat"",
                    ""type"": ""Button"",
                    ""id"": ""740d3fcf-da47-42bd-a6e4-47e15688a7ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Snatch"",
                    ""type"": ""Button"",
                    ""id"": ""b40ae7e6-5c86-407a-b90e-eb9073176aa7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""b2dd8f3f-2ec0-48a1-b9e3-50040a35f977"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""71e81f2c-3933-4966-a5fb-df139a732b30"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Caw"",
                    ""type"": ""Button"",
                    ""id"": ""b23de163-1f1b-429e-981b-9d0b7862ed4d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7cb96b94-00d4-4947-940c-65f3191e53c8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Poop"",
                    ""type"": ""Button"",
                    ""id"": ""66e5aeaa-dffd-42a3-8673-e770990da8e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DragonLockOn"",
                    ""type"": ""Button"",
                    ""id"": ""5907e50a-1eee-4708-a5e0-925f2eb32d71"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""33451d84-4d40-4673-9264-327a2b73831d"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Glide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3f384f7-5b85-414e-9d19-d2cbe32beefc"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Glide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c984d088-ea9b-4b9b-9b66-f62508c13fdd"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b58d955c-5a18-4026-a2c1-1c5a60bb0841"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90ac33f5-f896-4b4f-8a80-74b6d8058514"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GlideLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc2caacf-93cc-450a-824a-6ee2566ecbad"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GlideRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c464499-e9c0-47ea-8958-9a0e57b1061f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""121eff01-9e0c-4dba-a137-c457a43b42da"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""751dfeb3-4ff1-4aa4-bb26-14ea9e2f36fe"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9dc3e473-1bf9-49f7-95a9-800093297476"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9cabec8a-5100-4c8f-b87d-fc9b55725ce2"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActivateHat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e384cb0-76c0-4b1a-98a4-167984a63b59"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Snatch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""076b3051-9ae7-4873-92c8-247a2fafe591"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Snatch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e95f57e2-35ba-4c42-83e3-2277ae946b9b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1a70630-02a0-482b-8c5b-6da5e16849de"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21a0669d-970e-45a9-b0b9-d127fffb81d1"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""3faa527c-1dae-49be-b207-0e769e8a9afb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""26b63381-11fb-4493-a4e6-af728203de35"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""aed86146-832f-4dd9-b298-c7c3fe0dba7f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4070cd5d-a80b-4514-9bd7-4aab022b6507"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""147260c0-1955-49cb-8306-0a2b9c5f4485"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0db52d4e-9687-44a3-a22e-5cd7b81cb042"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Caw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a135c2dd-936c-4b34-838c-222b7dbfa41c"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Caw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de7bf59d-9d89-48a3-a2a1-58a22ca149c8"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertY=false)"",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1abb31ac-61da-4bba-8b5a-33f78beaec89"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertY=false)"",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b292632f-7007-4cb8-886e-9a210819248d"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Poop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29fd8eff-7f16-494a-9cb5-cc96b7e19df5"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Poop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c16c2f09-610b-4b04-a596-e4b3c989eeeb"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DragonLockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""249e7739-f6e0-4f2d-8df9-e35047434970"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DragonLockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5b55a03-797b-4aa7-95b7-5f2ab2459fca"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CowBoyHatShot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f8c4558-ab22-4bc8-a3c4-7eaff4f813f7"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CowBoyHatShot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""056afddb-ed95-4d1b-8d15-af493f6b99ef"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CowBoyHatUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ce64d90-c11c-458d-aea4-bf067a973032"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CowBoyHatUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae0f4c6d-4ab1-4576-99c2-030cf45b3344"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActivateHat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Pause"",
            ""id"": ""16c4472a-5611-435b-835b-4a121f3e8be4"",
            ""actions"": [
                {
                    ""name"": ""PauseGame"",
                    ""type"": ""Button"",
                    ""id"": ""1036cb9b-5a91-4891-9e58-cf4c70636b63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuitGame"",
                    ""type"": ""Button"",
                    ""id"": ""31d09895-e657-4807-9d77-01c132754aac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuestAction"",
                    ""type"": ""Button"",
                    ""id"": ""9a5d3679-0bdb-450f-937b-0ed615a4c4c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenSkillTree"",
                    ""type"": ""Button"",
                    ""id"": ""c66483df-25de-49ce-a541-4e606514d3c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1a7e2700-2a7e-4bc0-a937-dd0c5b317dec"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b797ba8-50c2-41a4-9d7f-69700f101236"",
                    ""path"": ""<XInputController>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a55956d3-6e32-4681-88c3-7fe358288c69"",
                    ""path"": ""<DualShockGamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e11ae17-7a43-4404-a37f-1b464a6f6b15"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40a3ddae-7038-4fe7-a3c3-e98aa13a9282"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuestAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d2b3943-e9e1-4dd9-b240-ea1e6339dd26"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuestAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b74613f1-f7cf-42c6-ab75-fa66ee953b07"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenSkillTree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23cd0dc3-87da-4675-866b-aa63bd16c44f"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenSkillTree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MenuActions"",
            ""id"": ""033a98fd-97d0-48f6-aba5-6ad5f991a052"",
            ""actions"": [
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""d4df9596-e6ab-4ecf-8613-ee9555f85dfe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BUP"",
                    ""type"": ""Button"",
                    ""id"": ""e5cf7d82-6e22-4bef-bd3c-a67ff6fb080e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Save"",
                    ""type"": ""Button"",
                    ""id"": ""e796dbce-18b6-4091-8783-849563fbebf1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Load"",
                    ""type"": ""Button"",
                    ""id"": ""874e1851-98cb-4966-a34b-b08da2093f63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SkipScene"",
                    ""type"": ""Button"",
                    ""id"": ""e38e7d92-7aec-4a1b-b1d5-d4af64015344"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""35a6f03f-7da8-412f-88a9-bd061af772ba"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27f43b57-b020-44b8-b96f-3e5df32ee060"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BUP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ac72827-41d7-40a4-a2dc-f92f9f129fb3"",
                    ""path"": ""<Keyboard>/leftBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4fb72fe-9cad-4239-9331-ddd2eb3fe9df"",
                    ""path"": ""<Keyboard>/slash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Load"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc97064b-1612-4784-9dcd-e87bf4f19bb3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkipScene"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62f457e7-c54b-4e3d-96ae-07b1936148e6"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkipScene"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Test"",
            ""id"": ""5c7a099f-3500-40a0-b5fa-c51413a09621"",
            ""actions"": [
                {
                    ""name"": ""HeathTest"",
                    ""type"": ""Button"",
                    ""id"": ""91898a4a-2695-4aac-b89f-88d2e42f1e9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""14d750c1-37c9-4ba3-8a30-8300bc25076c"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeathTest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Inv
        m_Inv = asset.FindActionMap("Inv", throwIfNotFound: true);
        m_Inv_Store = m_Inv.FindAction("Store", throwIfNotFound: true);
        m_Inv_Drop = m_Inv.FindAction("Drop", throwIfNotFound: true);
        m_Inv_OpenInv = m_Inv.FindAction("OpenInv", throwIfNotFound: true);
        m_Inv_PressPick = m_Inv.FindAction("PressPick", throwIfNotFound: true);
        m_Inv_HoldItem = m_Inv.FindAction("HoldItem", throwIfNotFound: true);
        // Actions
        m_Actions = asset.FindActionMap("Actions", throwIfNotFound: true);
        m_Actions_Glide = m_Actions.FindAction("Glide", throwIfNotFound: true);
        m_Actions_Dive = m_Actions.FindAction("Dive", throwIfNotFound: true);
        m_Actions_GlideLeft = m_Actions.FindAction("GlideLeft", throwIfNotFound: true);
        m_Actions_GlideRight = m_Actions.FindAction("GlideRight", throwIfNotFound: true);
        m_Actions_Jump = m_Actions.FindAction("Jump", throwIfNotFound: true);
        m_Actions_SwitchHat = m_Actions.FindAction("SwitchHat", throwIfNotFound: true);
        m_Actions_CowBoyHatShot = m_Actions.FindAction("CowBoyHatShot", throwIfNotFound: true);
        m_Actions_CowBoyHatUse = m_Actions.FindAction("CowBoyHatUse", throwIfNotFound: true);
        m_Actions_ActivateHat = m_Actions.FindAction("ActivateHat", throwIfNotFound: true);
        m_Actions_Snatch = m_Actions.FindAction("Snatch", throwIfNotFound: true);
        m_Actions_Interact = m_Actions.FindAction("Interact", throwIfNotFound: true);
        m_Actions_Movement = m_Actions.FindAction("Movement", throwIfNotFound: true);
        m_Actions_Caw = m_Actions.FindAction("Caw", throwIfNotFound: true);
        m_Actions_Look = m_Actions.FindAction("Look", throwIfNotFound: true);
        m_Actions_Poop = m_Actions.FindAction("Poop", throwIfNotFound: true);
        m_Actions_DragonLockOn = m_Actions.FindAction("DragonLockOn", throwIfNotFound: true);
        // Pause
        m_Pause = asset.FindActionMap("Pause", throwIfNotFound: true);
        m_Pause_PauseGame = m_Pause.FindAction("PauseGame", throwIfNotFound: true);
        m_Pause_QuitGame = m_Pause.FindAction("QuitGame", throwIfNotFound: true);
        m_Pause_QuestAction = m_Pause.FindAction("QuestAction", throwIfNotFound: true);
        m_Pause_OpenSkillTree = m_Pause.FindAction("OpenSkillTree", throwIfNotFound: true);
        // MenuActions
        m_MenuActions = asset.FindActionMap("MenuActions", throwIfNotFound: true);
        m_MenuActions_Quit = m_MenuActions.FindAction("Quit", throwIfNotFound: true);
        m_MenuActions_BUP = m_MenuActions.FindAction("BUP", throwIfNotFound: true);
        m_MenuActions_Save = m_MenuActions.FindAction("Save", throwIfNotFound: true);
        m_MenuActions_Load = m_MenuActions.FindAction("Load", throwIfNotFound: true);
        m_MenuActions_SkipScene = m_MenuActions.FindAction("SkipScene", throwIfNotFound: true);
        // Test
        m_Test = asset.FindActionMap("Test", throwIfNotFound: true);
        m_Test_HeathTest = m_Test.FindAction("HeathTest", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Inv
    private readonly InputActionMap m_Inv;
    private IInvActions m_InvActionsCallbackInterface;
    private readonly InputAction m_Inv_Store;
    private readonly InputAction m_Inv_Drop;
    private readonly InputAction m_Inv_OpenInv;
    private readonly InputAction m_Inv_PressPick;
    private readonly InputAction m_Inv_HoldItem;
    public struct InvActions
    {
        private @ControlsforPlayer m_Wrapper;
        public InvActions(@ControlsforPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @Store => m_Wrapper.m_Inv_Store;
        public InputAction @Drop => m_Wrapper.m_Inv_Drop;
        public InputAction @OpenInv => m_Wrapper.m_Inv_OpenInv;
        public InputAction @PressPick => m_Wrapper.m_Inv_PressPick;
        public InputAction @HoldItem => m_Wrapper.m_Inv_HoldItem;
        public InputActionMap Get() { return m_Wrapper.m_Inv; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InvActions set) { return set.Get(); }
        public void SetCallbacks(IInvActions instance)
        {
            if (m_Wrapper.m_InvActionsCallbackInterface != null)
            {
                @Store.started -= m_Wrapper.m_InvActionsCallbackInterface.OnStore;
                @Store.performed -= m_Wrapper.m_InvActionsCallbackInterface.OnStore;
                @Store.canceled -= m_Wrapper.m_InvActionsCallbackInterface.OnStore;
                @Drop.started -= m_Wrapper.m_InvActionsCallbackInterface.OnDrop;
                @Drop.performed -= m_Wrapper.m_InvActionsCallbackInterface.OnDrop;
                @Drop.canceled -= m_Wrapper.m_InvActionsCallbackInterface.OnDrop;
                @OpenInv.started -= m_Wrapper.m_InvActionsCallbackInterface.OnOpenInv;
                @OpenInv.performed -= m_Wrapper.m_InvActionsCallbackInterface.OnOpenInv;
                @OpenInv.canceled -= m_Wrapper.m_InvActionsCallbackInterface.OnOpenInv;
                @PressPick.started -= m_Wrapper.m_InvActionsCallbackInterface.OnPressPick;
                @PressPick.performed -= m_Wrapper.m_InvActionsCallbackInterface.OnPressPick;
                @PressPick.canceled -= m_Wrapper.m_InvActionsCallbackInterface.OnPressPick;
                @HoldItem.started -= m_Wrapper.m_InvActionsCallbackInterface.OnHoldItem;
                @HoldItem.performed -= m_Wrapper.m_InvActionsCallbackInterface.OnHoldItem;
                @HoldItem.canceled -= m_Wrapper.m_InvActionsCallbackInterface.OnHoldItem;
            }
            m_Wrapper.m_InvActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Store.started += instance.OnStore;
                @Store.performed += instance.OnStore;
                @Store.canceled += instance.OnStore;
                @Drop.started += instance.OnDrop;
                @Drop.performed += instance.OnDrop;
                @Drop.canceled += instance.OnDrop;
                @OpenInv.started += instance.OnOpenInv;
                @OpenInv.performed += instance.OnOpenInv;
                @OpenInv.canceled += instance.OnOpenInv;
                @PressPick.started += instance.OnPressPick;
                @PressPick.performed += instance.OnPressPick;
                @PressPick.canceled += instance.OnPressPick;
                @HoldItem.started += instance.OnHoldItem;
                @HoldItem.performed += instance.OnHoldItem;
                @HoldItem.canceled += instance.OnHoldItem;
            }
        }
    }
    public InvActions @Inv => new InvActions(this);

    // Actions
    private readonly InputActionMap m_Actions;
    private IActionsActions m_ActionsActionsCallbackInterface;
    private readonly InputAction m_Actions_Glide;
    private readonly InputAction m_Actions_Dive;
    private readonly InputAction m_Actions_GlideLeft;
    private readonly InputAction m_Actions_GlideRight;
    private readonly InputAction m_Actions_Jump;
    private readonly InputAction m_Actions_SwitchHat;
    private readonly InputAction m_Actions_CowBoyHatShot;
    private readonly InputAction m_Actions_CowBoyHatUse;
    private readonly InputAction m_Actions_ActivateHat;
    private readonly InputAction m_Actions_Snatch;
    private readonly InputAction m_Actions_Interact;
    private readonly InputAction m_Actions_Movement;
    private readonly InputAction m_Actions_Caw;
    private readonly InputAction m_Actions_Look;
    private readonly InputAction m_Actions_Poop;
    private readonly InputAction m_Actions_DragonLockOn;
    public struct ActionsActions
    {
        private @ControlsforPlayer m_Wrapper;
        public ActionsActions(@ControlsforPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @Glide => m_Wrapper.m_Actions_Glide;
        public InputAction @Dive => m_Wrapper.m_Actions_Dive;
        public InputAction @GlideLeft => m_Wrapper.m_Actions_GlideLeft;
        public InputAction @GlideRight => m_Wrapper.m_Actions_GlideRight;
        public InputAction @Jump => m_Wrapper.m_Actions_Jump;
        public InputAction @SwitchHat => m_Wrapper.m_Actions_SwitchHat;
        public InputAction @CowBoyHatShot => m_Wrapper.m_Actions_CowBoyHatShot;
        public InputAction @CowBoyHatUse => m_Wrapper.m_Actions_CowBoyHatUse;
        public InputAction @ActivateHat => m_Wrapper.m_Actions_ActivateHat;
        public InputAction @Snatch => m_Wrapper.m_Actions_Snatch;
        public InputAction @Interact => m_Wrapper.m_Actions_Interact;
        public InputAction @Movement => m_Wrapper.m_Actions_Movement;
        public InputAction @Caw => m_Wrapper.m_Actions_Caw;
        public InputAction @Look => m_Wrapper.m_Actions_Look;
        public InputAction @Poop => m_Wrapper.m_Actions_Poop;
        public InputAction @DragonLockOn => m_Wrapper.m_Actions_DragonLockOn;
        public InputActionMap Get() { return m_Wrapper.m_Actions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionsActions set) { return set.Get(); }
        public void SetCallbacks(IActionsActions instance)
        {
            if (m_Wrapper.m_ActionsActionsCallbackInterface != null)
            {
                @Glide.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnGlide;
                @Glide.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnGlide;
                @Glide.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnGlide;
                @Dive.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnDive;
                @Dive.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnDive;
                @Dive.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnDive;
                @GlideLeft.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnGlideLeft;
                @GlideLeft.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnGlideLeft;
                @GlideLeft.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnGlideLeft;
                @GlideRight.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnGlideRight;
                @GlideRight.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnGlideRight;
                @GlideRight.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnGlideRight;
                @Jump.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnJump;
                @SwitchHat.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnSwitchHat;
                @SwitchHat.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnSwitchHat;
                @SwitchHat.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnSwitchHat;
                @CowBoyHatShot.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnCowBoyHatShot;
                @CowBoyHatShot.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnCowBoyHatShot;
                @CowBoyHatShot.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnCowBoyHatShot;
                @CowBoyHatUse.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnCowBoyHatUse;
                @CowBoyHatUse.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnCowBoyHatUse;
                @CowBoyHatUse.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnCowBoyHatUse;
                @ActivateHat.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnActivateHat;
                @ActivateHat.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnActivateHat;
                @ActivateHat.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnActivateHat;
                @Snatch.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnSnatch;
                @Snatch.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnSnatch;
                @Snatch.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnSnatch;
                @Interact.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnInteract;
                @Movement.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnMovement;
                @Caw.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnCaw;
                @Caw.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnCaw;
                @Caw.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnCaw;
                @Look.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnLook;
                @Poop.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnPoop;
                @Poop.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnPoop;
                @Poop.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnPoop;
                @DragonLockOn.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnDragonLockOn;
                @DragonLockOn.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnDragonLockOn;
                @DragonLockOn.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnDragonLockOn;
            }
            m_Wrapper.m_ActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Glide.started += instance.OnGlide;
                @Glide.performed += instance.OnGlide;
                @Glide.canceled += instance.OnGlide;
                @Dive.started += instance.OnDive;
                @Dive.performed += instance.OnDive;
                @Dive.canceled += instance.OnDive;
                @GlideLeft.started += instance.OnGlideLeft;
                @GlideLeft.performed += instance.OnGlideLeft;
                @GlideLeft.canceled += instance.OnGlideLeft;
                @GlideRight.started += instance.OnGlideRight;
                @GlideRight.performed += instance.OnGlideRight;
                @GlideRight.canceled += instance.OnGlideRight;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @SwitchHat.started += instance.OnSwitchHat;
                @SwitchHat.performed += instance.OnSwitchHat;
                @SwitchHat.canceled += instance.OnSwitchHat;
                @CowBoyHatShot.started += instance.OnCowBoyHatShot;
                @CowBoyHatShot.performed += instance.OnCowBoyHatShot;
                @CowBoyHatShot.canceled += instance.OnCowBoyHatShot;
                @CowBoyHatUse.started += instance.OnCowBoyHatUse;
                @CowBoyHatUse.performed += instance.OnCowBoyHatUse;
                @CowBoyHatUse.canceled += instance.OnCowBoyHatUse;
                @ActivateHat.started += instance.OnActivateHat;
                @ActivateHat.performed += instance.OnActivateHat;
                @ActivateHat.canceled += instance.OnActivateHat;
                @Snatch.started += instance.OnSnatch;
                @Snatch.performed += instance.OnSnatch;
                @Snatch.canceled += instance.OnSnatch;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Caw.started += instance.OnCaw;
                @Caw.performed += instance.OnCaw;
                @Caw.canceled += instance.OnCaw;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Poop.started += instance.OnPoop;
                @Poop.performed += instance.OnPoop;
                @Poop.canceled += instance.OnPoop;
                @DragonLockOn.started += instance.OnDragonLockOn;
                @DragonLockOn.performed += instance.OnDragonLockOn;
                @DragonLockOn.canceled += instance.OnDragonLockOn;
            }
        }
    }
    public ActionsActions @Actions => new ActionsActions(this);

    // Pause
    private readonly InputActionMap m_Pause;
    private IPauseActions m_PauseActionsCallbackInterface;
    private readonly InputAction m_Pause_PauseGame;
    private readonly InputAction m_Pause_QuitGame;
    private readonly InputAction m_Pause_QuestAction;
    private readonly InputAction m_Pause_OpenSkillTree;
    public struct PauseActions
    {
        private @ControlsforPlayer m_Wrapper;
        public PauseActions(@ControlsforPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @PauseGame => m_Wrapper.m_Pause_PauseGame;
        public InputAction @QuitGame => m_Wrapper.m_Pause_QuitGame;
        public InputAction @QuestAction => m_Wrapper.m_Pause_QuestAction;
        public InputAction @OpenSkillTree => m_Wrapper.m_Pause_OpenSkillTree;
        public InputActionMap Get() { return m_Wrapper.m_Pause; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PauseActions set) { return set.Get(); }
        public void SetCallbacks(IPauseActions instance)
        {
            if (m_Wrapper.m_PauseActionsCallbackInterface != null)
            {
                @PauseGame.started -= m_Wrapper.m_PauseActionsCallbackInterface.OnPauseGame;
                @PauseGame.performed -= m_Wrapper.m_PauseActionsCallbackInterface.OnPauseGame;
                @PauseGame.canceled -= m_Wrapper.m_PauseActionsCallbackInterface.OnPauseGame;
                @QuitGame.started -= m_Wrapper.m_PauseActionsCallbackInterface.OnQuitGame;
                @QuitGame.performed -= m_Wrapper.m_PauseActionsCallbackInterface.OnQuitGame;
                @QuitGame.canceled -= m_Wrapper.m_PauseActionsCallbackInterface.OnQuitGame;
                @QuestAction.started -= m_Wrapper.m_PauseActionsCallbackInterface.OnQuestAction;
                @QuestAction.performed -= m_Wrapper.m_PauseActionsCallbackInterface.OnQuestAction;
                @QuestAction.canceled -= m_Wrapper.m_PauseActionsCallbackInterface.OnQuestAction;
                @OpenSkillTree.started -= m_Wrapper.m_PauseActionsCallbackInterface.OnOpenSkillTree;
                @OpenSkillTree.performed -= m_Wrapper.m_PauseActionsCallbackInterface.OnOpenSkillTree;
                @OpenSkillTree.canceled -= m_Wrapper.m_PauseActionsCallbackInterface.OnOpenSkillTree;
            }
            m_Wrapper.m_PauseActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PauseGame.started += instance.OnPauseGame;
                @PauseGame.performed += instance.OnPauseGame;
                @PauseGame.canceled += instance.OnPauseGame;
                @QuitGame.started += instance.OnQuitGame;
                @QuitGame.performed += instance.OnQuitGame;
                @QuitGame.canceled += instance.OnQuitGame;
                @QuestAction.started += instance.OnQuestAction;
                @QuestAction.performed += instance.OnQuestAction;
                @QuestAction.canceled += instance.OnQuestAction;
                @OpenSkillTree.started += instance.OnOpenSkillTree;
                @OpenSkillTree.performed += instance.OnOpenSkillTree;
                @OpenSkillTree.canceled += instance.OnOpenSkillTree;
            }
        }
    }
    public PauseActions @Pause => new PauseActions(this);

    // MenuActions
    private readonly InputActionMap m_MenuActions;
    private IMenuActionsActions m_MenuActionsActionsCallbackInterface;
    private readonly InputAction m_MenuActions_Quit;
    private readonly InputAction m_MenuActions_BUP;
    private readonly InputAction m_MenuActions_Save;
    private readonly InputAction m_MenuActions_Load;
    private readonly InputAction m_MenuActions_SkipScene;
    public struct MenuActionsActions
    {
        private @ControlsforPlayer m_Wrapper;
        public MenuActionsActions(@ControlsforPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @Quit => m_Wrapper.m_MenuActions_Quit;
        public InputAction @BUP => m_Wrapper.m_MenuActions_BUP;
        public InputAction @Save => m_Wrapper.m_MenuActions_Save;
        public InputAction @Load => m_Wrapper.m_MenuActions_Load;
        public InputAction @SkipScene => m_Wrapper.m_MenuActions_SkipScene;
        public InputActionMap Get() { return m_Wrapper.m_MenuActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActionsActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActionsActions instance)
        {
            if (m_Wrapper.m_MenuActionsActionsCallbackInterface != null)
            {
                @Quit.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnQuit;
                @Quit.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnQuit;
                @Quit.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnQuit;
                @BUP.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnBUP;
                @BUP.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnBUP;
                @BUP.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnBUP;
                @Save.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnSave;
                @Save.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnSave;
                @Save.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnSave;
                @Load.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnLoad;
                @Load.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnLoad;
                @Load.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnLoad;
                @SkipScene.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnSkipScene;
                @SkipScene.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnSkipScene;
                @SkipScene.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnSkipScene;
            }
            m_Wrapper.m_MenuActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Quit.started += instance.OnQuit;
                @Quit.performed += instance.OnQuit;
                @Quit.canceled += instance.OnQuit;
                @BUP.started += instance.OnBUP;
                @BUP.performed += instance.OnBUP;
                @BUP.canceled += instance.OnBUP;
                @Save.started += instance.OnSave;
                @Save.performed += instance.OnSave;
                @Save.canceled += instance.OnSave;
                @Load.started += instance.OnLoad;
                @Load.performed += instance.OnLoad;
                @Load.canceled += instance.OnLoad;
                @SkipScene.started += instance.OnSkipScene;
                @SkipScene.performed += instance.OnSkipScene;
                @SkipScene.canceled += instance.OnSkipScene;
            }
        }
    }
    public MenuActionsActions @MenuActions => new MenuActionsActions(this);

    // Test
    private readonly InputActionMap m_Test;
    private ITestActions m_TestActionsCallbackInterface;
    private readonly InputAction m_Test_HeathTest;
    public struct TestActions
    {
        private @ControlsforPlayer m_Wrapper;
        public TestActions(@ControlsforPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @HeathTest => m_Wrapper.m_Test_HeathTest;
        public InputActionMap Get() { return m_Wrapper.m_Test; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TestActions set) { return set.Get(); }
        public void SetCallbacks(ITestActions instance)
        {
            if (m_Wrapper.m_TestActionsCallbackInterface != null)
            {
                @HeathTest.started -= m_Wrapper.m_TestActionsCallbackInterface.OnHeathTest;
                @HeathTest.performed -= m_Wrapper.m_TestActionsCallbackInterface.OnHeathTest;
                @HeathTest.canceled -= m_Wrapper.m_TestActionsCallbackInterface.OnHeathTest;
            }
            m_Wrapper.m_TestActionsCallbackInterface = instance;
            if (instance != null)
            {
                @HeathTest.started += instance.OnHeathTest;
                @HeathTest.performed += instance.OnHeathTest;
                @HeathTest.canceled += instance.OnHeathTest;
            }
        }
    }
    public TestActions @Test => new TestActions(this);
    public interface IInvActions
    {
        void OnStore(InputAction.CallbackContext context);
        void OnDrop(InputAction.CallbackContext context);
        void OnOpenInv(InputAction.CallbackContext context);
        void OnPressPick(InputAction.CallbackContext context);
        void OnHoldItem(InputAction.CallbackContext context);
    }
    public interface IActionsActions
    {
        void OnGlide(InputAction.CallbackContext context);
        void OnDive(InputAction.CallbackContext context);
        void OnGlideLeft(InputAction.CallbackContext context);
        void OnGlideRight(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSwitchHat(InputAction.CallbackContext context);
        void OnCowBoyHatShot(InputAction.CallbackContext context);
        void OnCowBoyHatUse(InputAction.CallbackContext context);
        void OnActivateHat(InputAction.CallbackContext context);
        void OnSnatch(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnCaw(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnPoop(InputAction.CallbackContext context);
        void OnDragonLockOn(InputAction.CallbackContext context);
    }
    public interface IPauseActions
    {
        void OnPauseGame(InputAction.CallbackContext context);
        void OnQuitGame(InputAction.CallbackContext context);
        void OnQuestAction(InputAction.CallbackContext context);
        void OnOpenSkillTree(InputAction.CallbackContext context);
    }
    public interface IMenuActionsActions
    {
        void OnQuit(InputAction.CallbackContext context);
        void OnBUP(InputAction.CallbackContext context);
        void OnSave(InputAction.CallbackContext context);
        void OnLoad(InputAction.CallbackContext context);
        void OnSkipScene(InputAction.CallbackContext context);
    }
    public interface ITestActions
    {
        void OnHeathTest(InputAction.CallbackContext context);
    }
}
